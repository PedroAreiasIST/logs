(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     79147,       1438]
NotebookOptionsPosition[     32438,        576]
NotebookOutlinePosition[     78953,       1436]
CellTagsIndexPosition[     78910,       1433]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "AceGen`"}], "\n", 
 RowBox[{"SMSInitialize", "[", 
  RowBox[{"\"\<padestrain33\>\"", ",", 
   RowBox[{"\"\<Language\>\"", "->", "\"\<Fortran90\>\""}], ",", 
   RowBox[{"\"\<Mode\>\"", " ", "->", " ", "\"\<Optimal\>\""}], ",", " ", 
   "\n", "  ", 
   RowBox[{"\"\<VectorLength\>\"", " ", "->", " ", "50000"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSModule", "[", 
    RowBox[{"\"\<padestrain33\>\"", ",", " ", 
     RowBox[{"Real", "[", 
      RowBox[{
       RowBox[{"elagrange$$", "[", "6", "]"}], ",", 
       RowBox[{"elog$$", "[", "6", "]"}], ",", 
       RowBox[{"deriv$$", "[", 
        RowBox[{"6", ",", "6"}], "]"}]}], "]"}]}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"elagrange", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"elagrange$$", ",", " ", 
      RowBox[{"{", "6", "}"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"elog", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"elog$$", ",", " ", 
      RowBox[{"{", "6", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deriv", "\[DoubleRightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Array", "[", 
     RowBox[{"deriv$$", ",", " ", 
      RowBox[{"{", 
       RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"id", "\[DoubleRightTee]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"id6", "\[DoubleRightTee]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"elag", "\[DoubleRightTee]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"elagrange", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "/", "2"}], ",", 
        RowBox[{"elagrange", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"elagrange", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "/", "2"}], ",", 
        RowBox[{"elagrange", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"el", "=", 
     RowBox[{"3", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"elag", ".", "elag"}], "+", "elag"}], ")"}], ".", 
       RowBox[{"SMSInverse", "[", 
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"elag", ".", "elag"}]}], "+", 
         RowBox[{"6", "*", "elag"}], "+", 
         RowBox[{"3", "*", "id"}]}], "]"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"el", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", "*", "elag"}], "+", 
      RowBox[{"30", "*", 
       RowBox[{"elag", ".", "elag"}]}], "+", 
      RowBox[{"11", "*", 
       RowBox[{"elag", ".", "elag", ".", "elag"}]}]}], ")"}], "*", 
    RowBox[{"SMSInverse", "[", 
     RowBox[{"15", "+", 
      RowBox[{"45", "*", "elag"}], "+", 
      RowBox[{"36", "*", 
       RowBox[{"elag", ".", "elag"}]}], "+", 
      RowBox[{"6", "*", 
       RowBox[{"elag", ".", "elag", ".", "elag"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"elog", "\[DoubleRightTee]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"el", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"el", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"el", "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", "3"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", 
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "3"}], "]"}], "]"}], "+", 
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "3"}], "]"}], "]"}], "+", 
      RowBox[{"el", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deriv", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"elog", ",", "elagrange"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"elog", ",", " ", "elog$$"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"deriv", ",", " ", "deriv$$"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSWrite", "[", "]"}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.888422998436076*^9, 3.8884230022102613`*^9}, {
   3.888423064709281*^9, 3.888423070659004*^9}, 3.888423119011651*^9, 
   3.8884232382724047`*^9, 3.888423456918532*^9, {3.8884235293374157`*^9, 
   3.888423546211936*^9}, {3.888423618167675*^9, 3.888423709682741*^9}, {
   3.888423755508934*^9, 3.8884239191854143`*^9}, {3.8884239579463778`*^9, 
   3.888424031650683*^9}, {3.8884255456208477`*^9, 3.888425552942952*^9}, {
   3.8884258112509813`*^9, 3.888425828034465*^9}, {3.888427087716757*^9, 
   3.888427100468292*^9}, {3.888427182613248*^9, 3.888427184675145*^9}, {
   3.8884272885262136`*^9, 3.888427337016128*^9}, {3.888427380512965*^9, 
   3.88842746987459*^9}, {3.888427765275443*^9, 3.888427768806467*^9}, {
   3.8884910357659883`*^9, 3.888491049211733*^9}, {3.8884916441865664`*^9, 
   3.888491671756454*^9}, {3.888666196633484*^9, 3.888666240800322*^9}, 
   3.888666422989339*^9, {3.888666547089096*^9, 3.888666707290697*^9}, {
   3.888666780073695*^9, 3.888666832541976*^9}, {3.888666873249476*^9, 
   3.888666879725747*^9}, 3.8886674948395767`*^9, {3.888668458694912*^9, 
   3.888668461354247*^9}, {3.888669380675693*^9, 3.8886693920240097`*^9}, 
   3.888670828766597*^9, {3.888670937040617*^9, 3.888670941406027*^9}, {
   3.88867232998112*^9, 3.888672332758874*^9}, {3.888672404304222*^9, 
   3.888672404962117*^9}, {3.888676472654601*^9, 3.88867648105544*^9}, {
   3.8886773265168*^9, 3.888677337520499*^9}, {3.888680630456992*^9, 
   3.8886806626204433`*^9}, {3.888930838409142*^9, 3.888930890984983*^9}, {
   3.8889309271938057`*^9, 3.8889309350279627`*^9}, {3.888939481656886*^9, 
   3.888939484563448*^9}, {3.888939521005753*^9, 3.8889395254355717`*^9}, {
   3.889513304560491*^9, 3.8895133397656193`*^9}, {3.8895140191017427`*^9, 
   3.889514026242155*^9}, {3.889514146644858*^9, 3.889514156844781*^9}, {
   3.889519842709166*^9, 3.889519863873165*^9}, {3.889519894338326*^9, 
   3.889519909586281*^9}, {3.889519979167366*^9, 3.889520039535684*^9}, 
   3.889520102100896*^9, {3.889520279720536*^9, 3.8895202831901913`*^9}, {
   3.8895204977817574`*^9, 3.889520498833262*^9}, {3.8895208786242323`*^9, 
   3.889520883313698*^9}, {3.889520919536324*^9, 3.889520922008017*^9}, {
   3.889587233619567*^9, 3.8895872345886507`*^9}, {3.889719299222414*^9, 
   3.8897193056312723`*^9}, {3.890142318013486*^9, 3.890142357651639*^9}, {
   3.890142393378097*^9, 3.890142414164982*^9}, 3.8901476253468943`*^9, {
   3.890208369902051*^9, 3.890208371202215*^9}, 3.89021075279276*^9, {
   3.890210788849222*^9, 3.890210799444714*^9}, {3.89021087187059*^9, 
   3.89021089143861*^9}, {3.890211425566671*^9, 3.890211460383308*^9}, {
   3.890214526389676*^9, 3.890214526981771*^9}, {3.890215353421707*^9, 
   3.890215361554242*^9}, {3.8902161906135483`*^9, 3.890216193475806*^9}, {
   3.89022545428123*^9, 3.89022545772822*^9}, {3.890227654956105*^9, 
   3.890227656867681*^9}, {3.890227948671775*^9, 3.890227951713974*^9}, {
   3.890228888881291*^9, 3.8902289194526653`*^9}, {3.890228951001392*^9, 
   3.890228951231593*^9}, {3.89022904674093*^9, 3.890229049953389*^9}, {
   3.890229412636323*^9, 3.890229450573373*^9}, {3.890230373772203*^9, 
   3.890230417572486*^9}, 3.890233164115555*^9, {3.890234759104817*^9, 
   3.890234761766706*^9}, 3.890235764586948*^9, {3.890241519151518*^9, 
   3.8902415328293247`*^9}, {3.890241753343458*^9, 3.8902417646229143`*^9}, 
   3.890242130828931*^9, 3.890243845226255*^9, {3.8902440209267273`*^9, 
   3.890244036020225*^9}, {3.8903051659200497`*^9, 3.890305218127657*^9}, {
   3.890320179306497*^9, 3.890320209435165*^9}, {3.8903207067793837`*^9, 
   3.890320713449176*^9}, {3.8904544812372513`*^9, 3.890454513271274*^9}, {
   3.890454598756756*^9, 3.890454682969966*^9}, {3.890455033625667*^9, 
   3.8904550402015133`*^9}, {3.890455097316687*^9, 3.890455099883383*^9}, {
   3.890455284015277*^9, 3.890455351576632*^9}, {3.890458940839799*^9, 
   3.890458941460998*^9}, {3.890481340941472*^9, 3.890481341199712*^9}, {
   3.890541814079792*^9, 3.890541824127962*^9}, {3.890628358123083*^9, 
   3.8906283598234*^9}, {3.890633137439053*^9, 3.8906331398536577`*^9}, {
   3.893415786249123*^9, 3.893415797120207*^9}, {3.893416809411178*^9, 
   3.893416815084811*^9}, {3.8934174238448*^9, 3.893417440626677*^9}, {
   3.893422208317727*^9, 3.893422210541574*^9}, {3.893422409261462*^9, 
   3.893422413184392*^9}, {3.89342258594281*^9, 3.8934225865731983`*^9}, {
   3.893423162237111*^9, 3.893423213298634*^9}, {3.8934234524366817`*^9, 
   3.893423453484003*^9}, 3.893432935320447*^9, {3.89348219419836*^9, 
   3.893482218577262*^9}, {3.893490378085081*^9, 3.893490399554844*^9}, 
   3.893509005299919*^9, {3.89351005650041*^9, 3.8935101186019907`*^9}, {
   3.893510695037066*^9, 3.893510715902137*^9}, {3.893510979519589*^9, 
   3.893511025923809*^9}, {3.893511287017003*^9, 3.8935113116165237`*^9}, {
   3.893511854649926*^9, 3.893511884032341*^9}, {3.893511920985857*^9, 
   3.893511930210569*^9}, {3.893512340119981*^9, 3.893512348766177*^9}, {
   3.893512382138384*^9, 3.893512390388154*^9}, {3.893526703325858*^9, 
   3.8935267124824753`*^9}, {3.893930359892522*^9, 3.893930365202861*^9}, {
   3.893930647821253*^9, 3.893930703588951*^9}, {3.89403798051096*^9, 
   3.894038009668771*^9}, {3.89407265473063*^9, 3.894072655755835*^9}, {
   3.894074511829484*^9, 3.894074512665419*^9}, {3.895216353760467*^9, 
   3.89521637397302*^9}, {3.8952164285660152`*^9, 3.895216457643648*^9}, 
   3.89521653143958*^9, {3.8952186758781977`*^9, 3.8952186925024147`*^9}, {
   3.895218735834084*^9, 3.895218743988494*^9}, {3.895218883745429*^9, 
   3.895218907080195*^9}, {3.895219016099269*^9, 3.8952190199303226`*^9}, {
   3.895219184351776*^9, 3.8952191940816107`*^9}, {3.895219348539577*^9, 
   3.895219374574347*^9}, {3.8952195280141478`*^9, 3.8952195347952023`*^9}, {
   3.895219777062172*^9, 3.8952197860451097`*^9}, {3.8952200660091553`*^9, 
   3.895220100562263*^9}, {3.895220229585981*^9, 3.895220282080701*^9}, {
   3.895220340502843*^9, 3.895220401037262*^9}, {3.895220674440485*^9, 
   3.895220734350666*^9}, {3.895220767564548*^9, 3.8952207706104603`*^9}, {
   3.895220874362172*^9, 3.89522088267933*^9}, {3.89522142919629*^9, 
   3.895221430529714*^9}, {3.89522157631522*^9, 3.89522157718545*^9}, {
   3.895221835188993*^9, 3.895221905440516*^9}, {3.895221955930242*^9, 
   3.895222020640032*^9}, {3.895222148836174*^9, 3.895222201606831*^9}, {
   3.895228588983715*^9, 3.895228589923539*^9}, {3.895228680416293*^9, 
   3.8952287241587276`*^9}, {3.895228805188137*^9, 3.895228874986884*^9}, {
   3.895229578778571*^9, 3.895229630127083*^9}, {3.895230091625423*^9, 
   3.89523013711156*^9}, {3.895230199660424*^9, 3.89523020342127*^9}, {
   3.895230391297083*^9, 3.895230538942618*^9}, {3.8952305904667463`*^9, 
   3.895230606348609*^9}, {3.895230717462862*^9, 3.895230824876305*^9}, {
   3.895667709232874*^9, 3.895667735653018*^9}, {3.8956680855461283`*^9, 
   3.8956681192966967`*^9}, {3.8986824524967613`*^9, 3.898682462299986*^9}, {
   3.898684991117551*^9, 3.898685011507966*^9}, {3.89868506583039*^9, 
   3.898685072767874*^9}, {3.8986868002855*^9, 3.898686801486293*^9}, 
   3.89868817323193*^9, {3.898692307012301*^9, 3.898692330957528*^9}, {
   3.903789926096889*^9, 3.903789938237151*^9}, {3.903790805948238*^9, 
   3.90379081848975*^9}, {3.903790850005102*^9, 3.903790879199071*^9}, {
   3.90379126969028*^9, 3.903791399044538*^9}, 3.9037914405038853`*^9, {
   3.90379147654125*^9, 3.903791568384639*^9}, {3.903791679414508*^9, 
   3.903791699636921*^9}, {3.9037917866112623`*^9, 3.903791795595285*^9}, {
   3.903791849517775*^9, 3.9037920444956427`*^9}, {3.903792641092483*^9, 
   3.903792653309029*^9}, {3.9037926924895277`*^9, 3.903792693636043*^9}, {
   3.903792749692048*^9, 3.903792749885001*^9}, {3.9037927835586433`*^9, 
   3.903792785842177*^9}, {3.9037936426245537`*^9, 3.903793676215307*^9}, {
   3.903793719754704*^9, 3.903793752107185*^9}, {3.903793802514205*^9, 
   3.903793832303212*^9}, {3.9037939702880573`*^9, 3.903793985788706*^9}, {
   3.903794081485434*^9, 3.903794105956457*^9}, {3.903794188918519*^9, 
   3.903794267706959*^9}, {3.903794331359321*^9, 3.903794393294655*^9}, {
   3.903794998159938*^9, 3.903794998172144*^9}, {3.9037953818842583`*^9, 
   3.903795392464171*^9}, {3.903795668872439*^9, 3.903795779178027*^9}, {
   3.904048128161215*^9, 3.904048132095134*^9}, {3.904048175521409*^9, 
   3.904048198481637*^9}, {3.90404871678228*^9, 3.904048717622527*^9}, 
   3.904048750866139*^9, {3.904048799234686*^9, 3.904048825712501*^9}, {
   3.9040489737134657`*^9, 3.9040489869298353`*^9}, {3.904049032138505*^9, 
   3.904049035585946*^9}, {3.904049168795579*^9, 3.904049170750231*^9}, {
   3.9040496231314707`*^9, 3.904049695297793*^9}, {3.904049772678671*^9, 
   3.904049795860619*^9}, {3.9040498912636642`*^9, 3.904049909532261*^9}, {
   3.9040506790669127`*^9, 3.904050709656478*^9}, {3.9040508071868553`*^9, 
   3.904050826118149*^9}, {3.904050924514244*^9, 3.9040509891343393`*^9}, {
   3.904051095004435*^9, 3.904051099111504*^9}, {3.9040511573284807`*^9, 
   3.90405125646518*^9}, {3.9040513237268057`*^9, 3.904051328541478*^9}, {
   3.9040517885848703`*^9, 3.904051836411439*^9}, {3.904051952123804*^9, 
   3.904051993154475*^9}, {3.904133251005458*^9, 3.904133313820236*^9}, 
   3.904133911127386*^9, {3.9041341085108747`*^9, 3.904134175271738*^9}, {
   3.904134210796241*^9, 3.904134258961917*^9}, {3.904137839718947*^9, 
   3.904137880586163*^9}, {3.904137911939747*^9, 3.904137929965787*^9}, {
   3.9041380099078817`*^9, 3.9041381585205927`*^9}, {3.904138190920548*^9, 
   3.904138226889216*^9}, {3.904138302393738*^9, 3.9041383176785583`*^9}, {
   3.904138367790119*^9, 3.9041383678084927`*^9}, {3.9042224828461313`*^9, 
   3.904222573342675*^9}, {3.904222656829459*^9, 3.904222667338134*^9}, {
   3.9042227535722733`*^9, 3.904222776037717*^9}, {3.904222844401164*^9, 
   3.9042229062896357`*^9}, {3.904222962970869*^9, 3.904222964776704*^9}, {
   3.904223010986182*^9, 3.904223037418118*^9}, {3.9042230869490147`*^9, 
   3.904223143717111*^9}, {3.904223201747815*^9, 3.9042232036014967`*^9}, {
   3.9042232788559513`*^9, 3.904223280187007*^9}, {3.904223342835587*^9, 
   3.90422336248948*^9}, {3.904223414648655*^9, 3.9042235654330378`*^9}, {
   3.9042236344214077`*^9, 3.904223684544765*^9}, {3.9042243461885357`*^9, 
   3.904224353151578*^9}, {3.904224400194488*^9, 3.904224451185666*^9}, {
   3.904224529742485*^9, 3.904224596025345*^9}, {3.904224652907132*^9, 
   3.9042246712700377`*^9}, {3.904224984155903*^9, 3.90422499046075*^9}, {
   3.9042250345582733`*^9, 3.9042250362519827`*^9}, {3.904225154698515*^9, 
   3.9042251648303843`*^9}, {3.9042253282666397`*^9, 3.904225353637845*^9}, {
   3.9042254095027943`*^9, 3.904225550165255*^9}, {3.904239325924182*^9, 
   3.904239332121039*^9}, {3.9042745760032682`*^9, 3.9042745794583387`*^9}, {
   3.9042746302435293`*^9, 3.904274631623205*^9}, {3.9042755993930902`*^9, 
   3.9042755993971367`*^9}, 3.904276035454238*^9, {3.9042760909288054`*^9, 
   3.904276091657414*^9}, {3.9042763203223248`*^9, 3.9042763275557327`*^9}, {
   3.904276442848527*^9, 3.904276480546446*^9}, {3.9042765159511957`*^9, 
   3.904276516198139*^9}, {3.9042765937991047`*^9, 3.904276624325108*^9}, {
   3.9043781660656767`*^9, 3.904378166904512*^9}, 3.904378199721442*^9, {
   3.9043792500038443`*^9, 3.904379268816738*^9}, {3.904379300475301*^9, 
   3.90437930047995*^9}, {3.9043794250092297`*^9, 3.904379465278164*^9}, {
   3.904379517675817*^9, 3.904379519360196*^9}, {3.904379626361184*^9, 
   3.904379641867947*^9}, {3.904379798865745*^9, 3.904379812959715*^9}, {
   3.904379950012497*^9, 3.9043801128875093`*^9}, {3.9043801660485783`*^9, 
   3.9043801920735903`*^9}, {3.904380228863619*^9, 3.904380243942099*^9}, {
   3.904380289289362*^9, 3.9043804069459553`*^9}, {3.904380459232527*^9, 
   3.904380504501622*^9}, {3.9043805349299297`*^9, 3.904380536962371*^9}, 
   3.904380575595831*^9, {3.904380622112957*^9, 3.904380704675045*^9}, {
   3.9043807448000803`*^9, 3.904380756970139*^9}, 3.9043808527226973`*^9, 
   3.9043810561719*^9, {3.904381099270172*^9, 3.90438110033393*^9}, {
   3.904381639764367*^9, 3.904381652065473*^9}, {3.904381690575581*^9, 
   3.904381701018146*^9}, {3.904381769260921*^9, 3.904381774483778*^9}, {
   3.904389587551961*^9, 3.904389590105784*^9}, {3.904389678619775*^9, 
   3.904389698269268*^9}, {3.9043915807970123`*^9, 3.904391597636531*^9}, {
   3.904391689043508*^9, 3.904391689995632*^9}, {3.904392324199072*^9, 
   3.904392351048093*^9}, {3.904392395559092*^9, 3.9043924065077333`*^9}, {
   3.904392869299431*^9, 3.9043928785173807`*^9}, {3.904393342317835*^9, 
   3.904393373524384*^9}, {3.90522072751687*^9, 3.90522082907629*^9}, {
   3.90522108397782*^9, 3.9052211283773737`*^9}, {3.905221638343196*^9, 
   3.905221649095427*^9}, 3.90522217917435*^9, {3.905222230836433*^9, 
   3.90522223106318*^9}, {3.905223055286038*^9, 3.9052230899003687`*^9}, {
   3.9052249801237583`*^9, 3.905225013096774*^9}, {3.9052256114737263`*^9, 
   3.905225631413018*^9}, {3.905225857712265*^9, 3.905225916561839*^9}, {
   3.905225996055564*^9, 3.905226026336567*^9}, {3.905226703108769*^9, 
   3.905226785325173*^9}, {3.9052268432202673`*^9, 3.905226876777317*^9}, {
   3.9052269070505323`*^9, 3.9052269097373533`*^9}, {3.905227190688572*^9, 
   3.9052272006124973`*^9}, {3.905227851143848*^9, 3.905227852468789*^9}, {
   3.9052279056468687`*^9, 3.9052279261324263`*^9}, {3.9052283223085117`*^9, 
   3.90522835907609*^9}, {3.905228401769656*^9, 3.9052284314867973`*^9}, {
   3.905228524947255*^9, 3.9052285306543713`*^9}, {3.905258663612237*^9, 
   3.9052586663419724`*^9}, {3.905258698013118*^9, 3.905258703751369*^9}, 
   3.905258851678853*^9, {3.9052588859433317`*^9, 3.9052589633961143`*^9}, {
   3.9052590590233717`*^9, 3.905259077599947*^9}, {3.905259114064756*^9, 
   3.905259120362965*^9}, {3.9052592316621447`*^9, 3.9052592791509457`*^9}, {
   3.905259449542097*^9, 3.905259581245027*^9}, {3.905259649553218*^9, 
   3.90525965919575*^9}, {3.905259753230967*^9, 3.905259834764539*^9}, {
   3.905259880566584*^9, 3.905259934048869*^9}, 3.905260667021616*^9, {
   3.90526089487717*^9, 3.9052609453427896`*^9}, {3.905260992699264*^9, 
   3.905261005720729*^9}, {3.905261458742391*^9, 3.905261484446741*^9}, {
   3.905261545527878*^9, 3.9052616073350363`*^9}, 3.905261926269856*^9, {
   3.90526247722937*^9, 3.905262519568461*^9}, {3.9052625520264683`*^9, 
   3.905262559166192*^9}, {3.905263104184045*^9, 3.90526312876458*^9}, {
   3.9053210647701406`*^9, 3.905321079207122*^9}, {3.905321155329973*^9, 
   3.905321205340189*^9}, {3.905321320731846*^9, 3.905321330537228*^9}, {
   3.90532138443545*^9, 3.9053213979560347`*^9}, {3.905321441858572*^9, 
   3.905321482161983*^9}, {3.9053218753139467`*^9, 3.905321905794415*^9}, {
   3.905322293529283*^9, 3.9053222978786297`*^9}, {3.9053223286296177`*^9, 
   3.905322365145121*^9}, {3.905412848885017*^9, 3.905412896170426*^9}, {
   3.9054129625275087`*^9, 3.905413278346683*^9}, {3.905413450710106*^9, 
   3.905413500335238*^9}, {3.905413612961053*^9, 3.905413682223281*^9}, {
   3.9054137519184523`*^9, 3.905413765807877*^9}, {3.905413846601779*^9, 
   3.905413939292224*^9}, {3.905414001945518*^9, 3.905414042175338*^9}, {
   3.90541433945958*^9, 3.905414408833488*^9}, {3.905414454220088*^9, 
   3.9054144831420097`*^9}, {3.905414563396694*^9, 3.9054145772920322`*^9}, {
   3.9054156869391727`*^9, 3.905415749347631*^9}, {3.9054159158731003`*^9, 
   3.905415924861652*^9}, {3.9054160958267612`*^9, 3.905416140950595*^9}, 
   3.9054162538963327`*^9, {3.90541644741988*^9, 3.905416477580937*^9}, {
   3.905416653076902*^9, 3.905416659871242*^9}, {3.905420309924727*^9, 
   3.905420323718515*^9}, {3.905420508820364*^9, 3.90542054122059*^9}, {
   3.905420591152376*^9, 3.905420593134103*^9}, {3.905420628430458*^9, 
   3.905420676605851*^9}, {3.905420746627213*^9, 3.905420798494852*^9}, {
   3.905420843396627*^9, 3.905420860330345*^9}, {3.9054209390942793`*^9, 
   3.905420960566258*^9}, {3.905421138540463*^9, 3.90542118001534*^9}, {
   3.9054212427309303`*^9, 3.905421287702402*^9}, {3.9054213316517363`*^9, 
   3.905421337648851*^9}, {3.905421381858177*^9, 3.9054214264563837`*^9}, {
   3.905421521990147*^9, 3.9054215344285192`*^9}, {3.9054216293999*^9, 
   3.9054216306771307`*^9}, {3.905421688758314*^9, 3.905421701163474*^9}, {
   3.905421945844507*^9, 3.9054219635118437`*^9}, {3.9054220009999866`*^9, 
   3.905422003600801*^9}, {3.905422050921002*^9, 3.9054220574787407`*^9}, {
   3.905422107780388*^9, 3.90542210907915*^9}, {3.905422158488035*^9, 
   3.905422164566607*^9}, {3.905422237025866*^9, 3.905422248446645*^9}, {
   3.9054222795194473`*^9, 3.9054222804871893`*^9}, {3.905422352010172*^9, 
   3.905422400676688*^9}, {3.905422503835085*^9, 3.905422506694827*^9}, {
   3.905422563313381*^9, 3.9054225635945*^9}, {3.905422647996859*^9, 
   3.905422697929104*^9}, {3.905423225175671*^9, 3.905423260307983*^9}, 
   3.9054233604378967`*^9, {3.90542340723901*^9, 3.9054234082222347`*^9}, {
   3.905423455955789*^9, 3.90542352917229*^9}, {3.905423646498939*^9, 
   3.905423651165938*^9}, {3.905423699837249*^9, 3.905423731046633*^9}, {
   3.905602073116688*^9, 3.9056020835247927`*^9}, {3.905602251249402*^9, 
   3.905602262572845*^9}, {3.905604225379311*^9, 3.9056042587003193`*^9}, {
   3.9056043033411093`*^9, 3.905604321203764*^9}, {3.905604522347681*^9, 
   3.905604593125765*^9}, {3.905605256239986*^9, 3.905605256449314*^9}, {
   3.905605289206629*^9, 3.9056052899151077`*^9}, {3.905605333705985*^9, 
   3.905605335822741*^9}, {3.905943222493822*^9, 3.905943251400999*^9}, {
   3.9059432842166443`*^9, 3.9059432843098993`*^9}, {3.9059433188207407`*^9, 
   3.905943672688837*^9}, {3.905943752510475*^9, 3.905943754713763*^9}, {
   3.9061979472010117`*^9, 3.90619805051854*^9}, {3.9070733611655903`*^9, 
   3.9070734684751453`*^9}, {3.907073536499311*^9, 3.907073615532298*^9}, {
   3.907073691738618*^9, 3.9070737492692204`*^9}, {3.907074044520282*^9, 
   3.907074245017972*^9}, {3.90707437686005*^9, 3.907074500583981*^9}, {
   3.907074562684574*^9, 3.907074577297544*^9}, {3.9070746249997053`*^9, 
   3.907074689483341*^9}, {3.90707474535417*^9, 3.907074835881097*^9}, {
   3.907074867757209*^9, 3.907074896570302*^9}, {3.907076115756897*^9, 
   3.907076175309169*^9}, 3.907246426574464*^9, {3.90746630748304*^9, 
   3.907466314037998*^9}, {3.907467156419565*^9, 3.907467159499508*^9}, {
   3.907468879308073*^9, 3.9074689023118887`*^9}, {3.907470813638707*^9, 
   3.907470869385049*^9}, {3.907471244655925*^9, 3.907471282068802*^9}, {
   3.9074747299190683`*^9, 3.907474752078683*^9}, {3.90747494752414*^9, 
   3.907474981977564*^9}, {3.907479547610785*^9, 3.907479575719681*^9}, {
   3.907485520369836*^9, 3.907485522599918*^9}, 3.907486482770741*^9, 
   3.907505644736465*^9, {3.907506210082652*^9, 3.907506234248528*^9}, {
   3.9075078214001303`*^9, 3.907507827536278*^9}, {3.907508562889724*^9, 
   3.907508597308783*^9}, {3.9075099308379583`*^9, 3.9075099591405287`*^9}, {
   3.907510765465375*^9, 3.9075107720109367`*^9}, {3.907510951552347*^9, 
   3.90751107553141*^9}, {3.9075111079264708`*^9, 3.9075111426987677`*^9}, {
   3.907512389499804*^9, 3.907512389502475*^9}, {3.907514100511222*^9, 
   3.907514111442024*^9}, {3.9075142842550993`*^9, 3.90751428505198*^9}, 
   3.907582022196422*^9, {3.9075848943984756`*^9, 3.907584903913587*^9}, {
   3.907585210222281*^9, 3.907585211306595*^9}, {3.907585964511211*^9, 
   3.907585984313266*^9}, {3.9075861213214903`*^9, 3.907586149655916*^9}, {
   3.907586561661187*^9, 3.9075865868240833`*^9}, {3.907587778692481*^9, 
   3.907587816221377*^9}, {3.9075916288998947`*^9, 3.9075916744153137`*^9}, {
   3.907599536337133*^9, 3.9075996055296087`*^9}, {3.907599863498764*^9, 
   3.907599864351323*^9}, {3.9076000810014877`*^9, 3.907600089199729*^9}, {
   3.907601839454035*^9, 3.907601846550132*^9}, {3.907603880641597*^9, 
   3.907603904785864*^9}, {3.9076041317862587`*^9, 3.9076041752157927`*^9}, {
   3.907607215687396*^9, 3.907607249144668*^9}, {3.907607590254272*^9, 
   3.907607595572956*^9}, {3.907608666260071*^9, 3.9076086818618927`*^9}, {
   3.907608923119171*^9, 3.9076089555491753`*^9}, {3.9076090909621468`*^9, 
   3.907609167348731*^9}, {3.907609942525968*^9, 3.907610027139409*^9}, {
   3.907610061201929*^9, 3.907610093346402*^9}, {3.907612362330576*^9, 
   3.907612371147781*^9}, {3.907612409653985*^9, 3.907612420399001*^9}, {
   3.907612465231893*^9, 3.907612489162339*^9}, {3.9076125651344833`*^9, 
   3.907612568477191*^9}, {3.90764251825982*^9, 3.907642546734117*^9}, {
   3.907642591743392*^9, 3.907642593780307*^9}, {3.907642656868169*^9, 
   3.907642693208372*^9}, {3.907644413482169*^9, 3.907644417912171*^9}, 
   3.907644458211207*^9, {3.907644497574155*^9, 3.907644801891007*^9}, {
   3.907644836231575*^9, 3.907644897979228*^9}, {3.907646950773768*^9, 
   3.907647001574832*^9}, 3.907654864204328*^9, {3.907655122405699*^9, 
   3.90765517683624*^9}, {3.9076552223597183`*^9, 3.907655226302743*^9}, {
   3.907655276175068*^9, 3.907655322992015*^9}, {3.907655451880295*^9, 
   3.907655465482564*^9}, {3.907655773425754*^9, 3.907655778455608*^9}, {
   3.9076561903428583`*^9, 3.9076561949837837`*^9}, {3.907656259087281*^9, 
   3.907656262145001*^9}, {3.9076563185385027`*^9, 3.907656333871056*^9}, {
   3.90765638684205*^9, 3.907656391622208*^9}, {3.907663709680786*^9, 
   3.9076638490397377`*^9}, {3.907669196974545*^9, 3.9076691972149553`*^9}, 
   3.9076723685311823`*^9, {3.907680374189047*^9, 3.907680378803466*^9}, {
   3.907680519055418*^9, 3.907680523690811*^9}, {3.907733220090588*^9, 
   3.907733220831249*^9}, {3.90773339005648*^9, 3.907733390498708*^9}, {
   3.908372254506048*^9, 3.908372279254916*^9}, {3.9083723830152197`*^9, 
   3.908372438014333*^9}, {3.9083724795186243`*^9, 3.90837248250887*^9}, 
   3.908372545493722*^9, {3.9083729758399153`*^9, 3.90837298540107*^9}, {
   3.908374130486878*^9, 3.908374132759942*^9}, {3.908374237166432*^9, 
   3.908374244687984*^9}, {3.908376941999353*^9, 3.908376987309331*^9}, {
   3.90837935965362*^9, 3.908379375164336*^9}, {3.908434138083857*^9, 
   3.908434146760682*^9}, {3.9084407599093723`*^9, 3.908440792359261*^9}, {
   3.908449309186554*^9, 3.9084493417492123`*^9}, {3.908449398763403*^9, 
   3.908449405915955*^9}, 3.908451685603237*^9, {3.909202433326375*^9, 
   3.909202451838442*^9}, {3.90920259553802*^9, 3.909202647558877*^9}, {
   3.909202939176865*^9, 3.909202978187234*^9}, {3.909203181869025*^9, 
   3.909203211427833*^9}, {3.9092033954664507`*^9, 3.90920350300642*^9}, {
   3.909203658724244*^9, 3.90920382373038*^9}, 3.909203866741974*^9, 
   3.909205366429965*^9, {3.909206261673242*^9, 3.90920632832773*^9}, {
   3.90920645023127*^9, 3.9092065141576138`*^9}, {3.909206637905203*^9, 
   3.909206679315806*^9}, {3.909206872425378*^9, 3.909206914673785*^9}, {
   3.9092069909415407`*^9, 3.9092070057665358`*^9}, {3.90921654794771*^9, 
   3.9092165875600653`*^9}, {3.909216729000161*^9, 3.909216797543892*^9}, {
   3.9092168283424397`*^9, 3.909216872065857*^9}, {3.909216951779361*^9, 
   3.909216975281898*^9}, {3.9092191977390633`*^9, 3.909219206741989*^9}, {
   3.911984613661858*^9, 3.9119846138242188`*^9}, {3.911986086785102*^9, 
   3.91198618236028*^9}, {3.911986323926536*^9, 3.911986338924111*^9}, {
   3.911986386582487*^9, 3.911986447400157*^9}, {3.915017375669972*^9, 
   3.9150173857057*^9}, 3.9150175999908333`*^9, {3.9150222217200737`*^9, 
   3.915022222426947*^9}, {3.915022370356614*^9, 3.915022372567151*^9}, {
   3.91502248130871*^9, 3.915022538873054*^9}, {3.915023646427579*^9, 
   3.915023657071603*^9}, {3.9210672375482273`*^9, 3.921067244618004*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1b06fb4e-f2ff-4da0-9c8b-973e3a2f9ca5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.90765639594884*^9, 3.907663860888112*^9, 
  3.907664328065963*^9, 3.907669204967111*^9, 3.9076722343588037`*^9, 
  3.9076805566382017`*^9, 3.907680746001663*^9, 3.907733226571821*^9, 
  3.908372552161825*^9, 3.908372988619738*^9, 3.908374247956665*^9, 
  3.9083770087184362`*^9, 3.908379377997695*^9, 3.908433240315528*^9, 
  3.908440799841366*^9, 3.9084451531940813`*^9, 3.908449410983652*^9, 
  3.909203487728194*^9, 3.909219139348358*^9, 3.909219239298656*^9, 
  3.9092193741937637`*^9, 3.91198635495586*^9, 3.911986455714849*^9, 
  3.915017392452016*^9, 3.91501759518745*^9, 3.9150225554012833`*^9, 
  3.915023664395914*^9, 3.921067251599622*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"135abbcc-7ad1-489c-b050-2d99ca81b4a5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"File:\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "\<\"padestrain33.f90\"\>", 
     StyleBox["\<\"Size:\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "32403"},
    {"\<\"Methods\"\>", "\<\"No.Formulae\"\>", "\<\"No.Leafs\"\>", 
     "\[SpanFromLeft]"},
    {
     StyleBox["\<\"padestrain33\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontWeight->Bold,
      FontColor->RGBColor[0, 0, 1]], "712", "12491", "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Rows" -> {1, 2}},
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.90921913996938*^9, 3.909219247755376*^9, 
  3.909219382942217*^9, 3.911986355999394*^9, 3.911986464494397*^9, 
  3.915017397802684*^9, 3.915017600510351*^9, 3.915022558164833*^9, 
  3.915023957950629*^9, 3.921067273211459*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2145d4ab-5a76-47cf-b633-cca79f62392d"]
}, Open  ]]
},
WindowSize->{1920, 1132.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/pedro/flow.pdf"},
Magnification:>2.1,
FrontEndVersion->"13.3 for Linux x86 (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c7e5dd9-0eef-49fa-a5f0-5caf478fc38c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 29437, 494, 864, "Input",ExpressionUUID->"1b06fb4e-f2ff-4da0-9c8b-973e3a2f9ca5"],
Cell[30007, 518, 781, 11, 69, "Output",ExpressionUUID->"135abbcc-7ad1-489c-b050-2d99ca81b4a5"],
Cell[30791, 531, 1631, 42, 128, "Print",ExpressionUUID->"2145d4ab-5a76-47cf-b633-cca79f62392d"]
}, Open  ]]
}
]
*)

